-- Subquery: Find all properties where the average rating is greater than 4.0.
-- This query first runs a subquery to find all 'property_id's from the 'reviews'
-- table that have an average rating above 4.0.
-- The outer query then selects all information for the properties whose
-- 'property_id' is in the list generated by the subquery.

SELECT *
FROM properties
WHERE property_id IN (
        SELECT property_id
        FROM reviews
        GROUP BY property_id
        HAVING AVG(rating) > 4.0
    );

--Correlated Subquery: Find users who have made more than 3 bookings.
-- This query selects users from the 'profile' table.
-- For each user row processed by the outer query, the correlated subquery is executed.
-- The subquery counts the number of bookings in the 'bookings' table that belong
-- to that specific user (b.user_id = p.user_id).
-- If the count is greater than 3, the user is included in the final result.

SELECT *
FROM profile AS p
WHERE (
        SELECT COUNT(*)
        FROM bookings AS b
        WHERE b.user_id = p.user_id
    ) > 3;
